/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        
        if(head==null ||head.next==null ) return head;
        ListNode sz=head;
        int size=0;
        while(sz!=null){
            size++;
            sz=sz.next;
        }
        k%=size;
        if(k==0) return head;
        ListNode cur=head;
        ListNode kthNode=head;
        ListNode prev=head;
        ListNode storehead=head; 

        
        for(int i=0;i<k;i++)
        {
            cur=cur.next;
        }
        while(cur!=null)
        {
            prev=kthNode;
            kthNode=kthNode.next;
            cur=cur.next;
        }
        prev.next=null;
        ListNode knode=kthNode;
        while(kthNode.next!=null)  kthNode=kthNode.next;
        
        kthNode.next=storehead;
       
        return knode;
    }
}