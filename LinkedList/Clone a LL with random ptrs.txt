/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
     
        if(head==null)
            return null;
        
        Map<Node,Node> hm=new HashMap<>();
        
        Node cur=head;
        while(cur!=null)
        {
            hm.put(cur,new Node(cur.val));
            cur=cur.next;
        }
        Node node=head;
        while(node != null) {
            hm.get(node).next = hm.get(node.next);
            hm.get(node).random = hm.get(node.random);
            node = node.next;
        }
        
       return hm.get(head);
    }
}